# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - 
      name: Build with Maven
      run: |
        mvn clean
        mvn -B package --file pom.xml
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - 
      name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Build and push Docker images
      uses: docker/build-push-action@v5.1.0
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-deploy-ec2:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    -
      name: login EC2 & docker run
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST_DNS }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker pull tim21615/spring-boot-deploy-ec2
          if [ "$(docker ps -q -f name=springboot)" ]; then
            docker stop springboot
            fi
          if [ "$(docker ps -aq -f status=exited -f name=springboot)" ]; then
            docker container rm springboot
            fi
          docker run -d --name springboot -p 80:8080 tim21615/spring-boot-deploy-ec2
          
    
            

